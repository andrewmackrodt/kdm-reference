{"version":3,"file":"styles/main.9cbae19.css","mappings":"AAGA,uDACE,mBAGF,gCACE,yBAEA,4EACE,6BACA,0BCgDA,wBD3CF,0CACE,mBACA,mBAGF,gDACE,eAIJ,2BACE,eAEA,2CACE,0BE9BJ,6BACE,gFACA,8BACA,wBACA,6DAEA,aACA,eACA,eACA,MACA,WAGF,wCACE,mBCbF,WACE,yBACA;;;EAAA,CAIA,mDAGF,WACE,WACA,WAIA,wBACA,cACA,6BACA,iBAGF,YACE,eACA,UAGF,UACE,kBACA,mCACA,oBACA,iBACA,cACA,mBACA,WACA,gBACA,eACA,kBACA,cACA,UAEA,YACE,wBACA,kBAGF,0BAME,kBACA,SACA,qBACA,sCACA,gBACA,kBACA,YAEA,wBACA,kBACA,kBACA,WAhBA,4BACE,eACA,kBAiBJ,gBACE,iCACA,iBACA,kBACA,qCAGF,iBAQE,KAKF,gCAZE,0DACA,qBACA,WACA,YACA,OACA,WACA,kBACA,CACA,UACA,WAcA,CAXF,eAEE,QACA,CAKA,wBAGA,qBAKA,uBACA,CADA,kBACA,CADA,eACA,YACA,UACA,iBACA,YACA,kBACA,MACA,WACA,sCAEA,wBACE,sBACA,WACA,cACA,YACA,WACA,kBACA,SACA,wBACA,WACA,WACA,CAIA,wDACA,wBACE,4BAIJ,qBACE,yBAGF,mDACE,eACA,CACA,eACA,CAFA,cAEA,oBAIJ,UACE,aACA,kBACA,mBACA,kBACA,0BACA,wBAEA,WACE,4BAIJ,sBACE,eACA,mBAGF,iBACE,kBACA,uBAGF,iBACE,8BAEA,mBACE,cACA,mBACA,aACA,gBAIJ,WACE,CACA,UACA,CAFA,iBACA,CACA,iBACA,SACA,WACA,uBAGF,kBACE,yBACA,kBACA,WACA,cACA,YACA,WACA,kBACA,wBACA,WACA,qBAGF,aACE,kBACA,gBACA,iBACA,iBACA,kBACA,UAIJ,eACE","sources":["webpack://kdm-reference/./src/components/menu.vue","webpack://kdm-reference/./node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://kdm-reference/./src/app.vue","webpack://kdm-reference/./styles/style.scss"],"sourcesContent":["\n@import \"styles/env\";\n\n#menu, .dropdown-menu {\n  background: #101010;\n}\n\n.dropdown-item {\n  color: rgba(255, 255, 255, 0.5);\n\n  &:hover, &:focus {\n    background-color: transparent;\n    color: rgba(255, 255, 255, 0.75);\n  }\n}\n\n@include media-breakpoint-up(lg) {\n  .dropdown > .dropdown-menu {\n    margin-top: -0.75rem;\n    padding-top: 0.75rem;\n  }\n\n  .dropdown:hover > .dropdown-menu {\n    display: block;\n  }\n}\n\n.nav-item {\n  cursor: pointer;\n\n  .dropdown:hover {\n    color: rgba(255, 255, 255, 0.75);\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","\n#background {\n  background: url('~images/crests/watcher-crest-box-sq.webp') no-repeat center center;\n  background-origin: content-box;\n  background-size: contain;\n  filter: grayscale(100%) invert(1) brightness(7%) opacity(0.85);\n  height: 100vh;\n  padding: 10vh 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: -100;\n}\n\n#content {\n  padding-top: 4.5rem;\n}\n","@import \"env\";\n\n@font-face {\n  font-family: \"EmojiSymbols\";\n  /*!\n   * EmojiSymbols Font (c)blockworks - Kenichi Kaneko\n   * http://emojisymbols.com/\n   */\n  src: url(\"../fonts/EmojiSymbols-Regular.woff\");\n}\n\nhtml, body {\n  height: 100%;\n  width: 100%;\n}\n\nbody {\n  background: #101010;\n  color: $font-color;\n  font-family: elido, sans-serif;\n  font-size: $font-size-base;\n}\n\n.card-list {\n  list-style: none;\n  padding: 0;\n}\n\n.card-md {\n  background: #040404;\n  border: solid 1px rgba(192, 192, 192, 0.10);\n  border-radius: $card-md-radius;\n  font-size: $font-size-card-md;\n  height: 1.5 * $card-md-height;\n  line-height: 1.5rem;\n  margin: 8px;\n  overflow: hidden;\n  padding: 1.5rem;\n  position: relative;\n  width: 1.5 * $card-md-width;\n  z-index: 1;\n\n  i {\n    font-family: \"EmojiSymbols\";\n    font-style: normal;\n  }\n\n  .record-archive {\n    i {\n      font-size: $font-size-base * 0.75;\n      padding-right: 2px;\n    }\n\n    background: #202020;\n    bottom: 0;\n    display: inline-block;\n    font-family: Verdana, Geneva, sans-serif;\n    font-size: $font-size-base * 0.75;\n    font-style: normal;\n    height: 3rem;\n    left: 0;\n    line-height: 3rem;\n    position: absolute;\n    text-align: center;\n    width: 100%;\n  }\n\n  .name {\n    font-family: adonis-web, sans-serif;\n    font-size: $font-size-base * 1.25;\n    text-align: center;\n    text-shadow: -2px -2px rgba(0, 0, 0, 0.2);\n  }\n\n  &::before {\n    background: url(\"~images/border.png\") 0 0 no-repeat;\n    background-size: 100%;\n    content: \"\";\n    height: 100%;\n    left: 0;\n    opacity: 0.5;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: -1;\n  }\n\n  &::after {\n    background: url(\"~images/border.png\") 0 0 no-repeat;\n    background-size: 100%;\n    bottom: 0;\n    content: \"\";\n    height: 100%;\n    left: 0;\n    opacity: 0.5;\n    position: absolute;\n    transform: rotate(180deg);\n    width: 100%;\n    z-index: -1;\n  }\n\n  .expansion {\n    border: solid 1.5px white;\n    border-bottom: none;\n    border-top: none;\n    height: 64px;\n    left: 16px;\n    line-height: 40px;\n    padding: 4px;\n    position: absolute;\n    top: 0;\n    width: 48px;\n\n    &:not(.nobg)::after {\n      background-color: inherit;\n      border: solid 1px white;\n      content: \"\";\n      display: block;\n      height: 34px;\n      left: 5.5px;\n      position: absolute;\n      top: 47px;\n      transform: rotate(45deg);\n      width: 34px;\n      z-index: -1;\n    }\n\n    &.nobg {\n      border-color: transparent;\n      &::after {\n        border-color: transparent;\n      }\n    }\n\n    &.hidden {\n      filter: brightness(0.2);\n    }\n\n    img {\n      filter: grayscale(0.25) contrast(1.25) brightness(0.9);\n      margin-top: 42%;\n      max-width: 100%;\n      max-height: 100%;\n    }\n  }\n\n  .location {\n    color: white;\n    height: 100px;\n    line-height: 100px;\n    margin: 1.5rem auto;\n    text-align: center;\n    text-transform: capitalize;\n\n    img {\n      height: 100%;\n    }\n  }\n\n  b, strong {\n    font-family: sans-serif;\n    font-size: $font-size-card-md-bold;\n  }\n\n  .caption {\n    font-style: italic;\n    text-align: center;\n  }\n\n  .description {\n    text-align: center;\n\n    .crest {\n      filter: grayscale(1);\n      height: $font-size-base;\n      padding-bottom: 2px;\n      width: $font-size-base;\n    }\n  }\n\n  .roll {\n    height: 64px;\n    position: absolute;\n    left: 150px;\n    text-align: center;\n    top: -4px;\n    width: 100%;\n  }\n\n  .roll::before {\n    background: #a01818;\n    border: 1px solid whitesmoke;\n    border-radius: 4px;\n    content: \"\";\n    display: block;\n    height: 40px;\n    left: 137px;\n    position: absolute;\n    transform: rotate(45deg);\n    width: 40px;\n  }\n\n  .roll > span {\n    display: block;\n    font-size: $font-size-sm;\n    font-weight: bold;\n    line-height: 40px;\n    margin-left: -8px;\n    position: relative;\n  }\n}\n\n.keyword {\n  font-weight: bold;\n}\n"],"names":[],"sourceRoot":""}