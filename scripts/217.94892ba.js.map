{"version":3,"file":"scripts/217.94892ba.js","mappings":"2JASYA,E,uDAAZ,SAAYA,GACR,+BACA,2BACA,cACA,iCACA,kBACA,mCACA,kBACA,uCACA,oBACA,yBACH,CAXD,CAAYA,IAAAA,EAAY,KAajB,MAAMC,EAA+C,CACxD,CAACD,EAAaE,cAAe,CACzBC,KAAM,MACNC,KAAM,gBACNC,aAAa,OAAK,yEAItB,CAACL,EAAaM,YAAa,CACvBH,KAAM,IACNC,KAAM,cACNC,aAAa,OAAK,iEAItB,CAACL,EAAaO,MAAO,CACjBJ,KAAM,IACNC,KAAM,OACNC,aAAa,OAAK,6JAKtB,CAACL,EAAaQ,eAAgB,CAC1BL,KAAM,MACNC,KAAM,iBACNC,aAAa,OAAK,qKAKtB,CAACL,EAAaS,QAAS,CACnBN,KAAM,MACNC,KAAM,SACNC,aAAa,OAAK,qEAItB,CAACL,EAAaU,gBAAiB,CAC3BP,KAAM,IACNC,KAAM,kBACNC,aAAa,OAAK,yEAItB,CAACL,EAAaW,QAAS,CACnBR,KAAM,KACNC,KAAM,SACNC,aAAa,OAAK,2UAOtB,CAACL,EAAaY,kBAAmB,CAC7BT,KAAM,KACNC,KAAM,oBACNC,aAAa,OAAK,iIAKtB,CAACL,EAAaa,SAAU,CACpBV,KAAM,KACNC,KAAM,UACNC,aAAa,OAAK,mNAMtB,CAACL,EAAac,YAAa,CACvBX,KAAM,KACNC,KAAM,cACNC,aAAa,OAAK,yHCtFpBU,EAAkCC,OAAOC,OAAOhB,GAAciB,KAAIC,IAAU,CAChFC,SAAU,IAAaC,KACvBjB,KAAMe,EAAOf,KACbkB,MAAOC,EACPC,QAASL,EAAOK,QAChBnB,YAAac,EAAOd,YACpBF,KAAMgB,EAAOhB,SAOA,oBAAc,KAC3B,SAAIsB,GACF,OAAOV,CACT,GAHa,aAHd,QAAU,CACTW,WAAY,CAAEC,SAAO,Q,aCjBvB,MAEA,GAFiC,E,OAAA,GAAgB,EAAQ,CAAC,CAAC,SCHpD,SAAgBC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAAuB,QAAkB,aAE/C,OAAQ,WFJR,QAAuF,GAA5E,YAAU,wBAAyBT,MAAOA,EAAAA,MAAO,kBAAgB,UEQzE,KAAM,EAAe,CAAC,SAC3B,I","sources":["webpack://kdm-reference/./src/references/brain-trauma.ts","webpack://kdm-reference/./src/views/brain-traumas.vue","webpack://kdm-reference/./src/views/brain-traumas.vue?7971","webpack://kdm-reference/./src/views/brain-traumas.vue?000a"],"sourcesContent":["import { trim } from 'utils/strings'\n\nexport interface BrainTrauma {\n    readonly roll: string\n    readonly name: string\n    readonly caption?: string\n    readonly description: string\n}\n\nexport enum BrainTraumas {\n    MortalTerror = 'mortal-terror',\n    MemoryLoss = 'memory-loss',\n    Flee = 'flee',\n    DangerSeizure = 'danger-seizure',\n    Lunacy = 'lunacy',\n    NewPerspective = 'new-perspective',\n    Frenzy = 'frenzy',\n    ManiacalLaughter = 'maniacal-laughter',\n    Clarity = 'clarity',\n    Impossible = 'impossible',\n}\n\nexport const brainTraumas: { [key: string]: BrainTrauma } = {\n    [BrainTraumas.MortalTerror]: {\n        roll: '1-2',\n        name: 'Mortal Terror',\n        description: trim(`\n            No ifs, ands, or buts, the survivor is dead.\n        `),\n    },\n    [BrainTraumas.MemoryLoss]: {\n        roll: '3',\n        name: 'Memory Loss',\n        description: trim(`\n            Lose 2 levels of weapon proficiency.\n        `),\n    },\n    [BrainTraumas.Flee]: {\n        roll: '4',\n        name: 'Flee',\n        description: trim(`\n            You are knocked down and suffer knockback equal to your movement\n            towards the closest board edge. Gain 1d5 insanity.\n        `),\n    },\n    [BrainTraumas.DangerSeizure]: {\n        roll: '5-6',\n        name: 'Danger Seizure',\n        description: trim(`\n            You thrash about wildly, dealing 1 damage to yourself and every\n            adjacent survivor. Gain a random disorder and 1d5 insanity.\n        `),\n    },\n    [BrainTraumas.Lunacy]: {\n        roll: '7-8',\n        name: 'Lunacy',\n        description: trim(`\n            Gain a random disorder and 1d5 insanity.\n        `),\n    },\n    [BrainTraumas.NewPerspective]: {\n        roll: '9',\n        name: 'New Perspective',\n        description: trim(`\n            You are knocked down and gain 1d10 insanity.\n        `),\n    },\n    [BrainTraumas.Frenzy]: {\n        roll: '10',\n        name: 'Frenzy',\n        description: trim(`\n            Gain 1d5 insanity, +1 speed token and +1 strength token. Ignore\n            [slow] on melee weapons. You may not spend survival. You may not use\n            fighting arts. You may not use weapon specialization or weapon\n            mastery. Can be gained multiple times. Lasts until end of showdown.\n        `),\n    },\n    [BrainTraumas.ManiacalLaughter]: {\n        roll: '11',\n        name: 'Maniacal Laughter',\n        description: trim(`\n            You are knocked down. Gain -1 speed token, the priority target\n            token, and 1d5 insanity.\n        `),\n    },\n    [BrainTraumas.Clarity]: {\n        roll: '12',\n        name: 'Clarity',\n        description: trim(`\n            You are knocked down. Add your current survival to insanity and\n            reduce your survival to 0. Gain a random disorder. If you already\n            have 3 disorders, you die.\n        `),\n    },\n    [BrainTraumas.Impossible]: {\n        roll: '13',\n        name: 'Impossible!',\n        description: trim(`\n            How could this happen! Gain +1d10 survival, +1d10 insanity and +2\n            luck tokens!\n        `),\n    },\n}\n","<template>\n  <card-list state-key=\"Reference.BrainTrauma\" :items=\"items\" list-item-class=\"trauma\" />\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-facing-decorator'\nimport CardList, { type CardItem } from 'components/card-list'\nimport HitLocations from 'enums/hit-locations'\nimport disorderImage from 'images/disorder.png'\nimport { brainTraumas } from 'references/brain-trauma'\n\nconst brainTraumaCardList: CardItem[] = Object.values(brainTraumas).map(trauma => ({\n  location: HitLocations.Head,\n  name: trauma.name,\n  image: disorderImage,\n  caption: trauma.caption,\n  description: trauma.description,\n  roll: trauma.roll,\n}))\n\n// @vue/component\n@Component({\n  components: { CardList },\n})\nexport default class extends Vue {\n  get items(): CardItem[] {\n    return brainTraumaCardList\n  }\n}\n</script>\n","import { render } from \"./brain-traumas.vue?vue&type=template&id=4da0d917&ts=true\"\nimport script from \"./brain-traumas.vue?vue&type=script&lang=ts\"\nexport * from \"./brain-traumas.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_card_list = _resolveComponent(\"card-list\")!\n\n  return (_openBlock(), _createBlock(_component_card_list, {\n    \"state-key\": \"Reference.BrainTrauma\",\n    items: _ctx.items,\n    \"list-item-class\": \"trauma\"\n  }, null, 8 /* PROPS */, [\"items\"]))\n}"],"names":["BrainTraumas","brainTraumas","MortalTerror","roll","name","description","MemoryLoss","Flee","DangerSeizure","Lunacy","NewPerspective","Frenzy","ManiacalLaughter","Clarity","Impossible","brainTraumaCardList","Object","values","map","trauma","location","Head","image","disorder","caption","items","components","CardList","_ctx","_cache","$props","$setup","$data","$options","_component_card_list"],"sourceRoot":""}